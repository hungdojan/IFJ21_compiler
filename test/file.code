.IFJcode21

JUMP $$main

LABEL reads
PUSHFRAME
DEFVAR LF@%retvar$1
MOVE LF@%retvar$1 nil@nil
READ LF@%retvar$1 string
POPFRAME
RETURN

LABEL readi
PUSHFRAME
DEFVAR LF@%retvar$1
MOVE LF@%retvar$1 nil@nil
READ LF@%retvar$1 int
POPFRAME
RETURN

LABEL readn
PUSHFRAME
DEFVAR LF@%retvar$1
MOVE LF@%retvar$1 nil@nil
READ LF@%retvar$1 float
POPFRAME
RETURN

LABEL write
PUSHFRAME
DEFVAR LF@%param1
DEFVAR LF@%cond
DEFVAR LF@%i
POPS LF@%i
SUB LF@%i LF@%i int@0
LABEL write&cycle
LT LF@%cond LF@%i int@1
JUMPIFEQ write&return LF@%cond bool@true
POPS LF@%param1
JUMPIFNEQ not&nil LF@%param1 nil@nil
WRITE string@nil
JUMP end&if&nil
LABEL not&nil
WRITE LF@%param1
LABEL end&if&nil
SUB LF@%i LF@%i int@1
JUMP write&cycle
LABEL write&return
POPFRAME
RETURN

LABEL tointeger
PUSHFRAME
DEFVAR LF@%retvar$1
MOVE LF@%retvar$1 nil@nil
DEFVAR LF@%cond
DEFVAR LF@%param1
MOVE LF@%param1 LF@%1
TYPE LF@%cond LF@%param1
JUMPIFEQ tointeger&return LF@%cond string@number
FLOAT2INT LF@%retvar$1 LF@%param1
LABEL tointeger&return
POPFRAME
RETURN

LABEL substr
PUSHFRAME
DEFVAR LF@%cond
DEFVAR LF@%param1
MOVE LF@%param1 LF@%1
TYPE LF@%cond LF@%param1
JUMPIFNEQ substr&exit LF@%cond string@string
DEFVAR LF@%param2
MOVE LF@%param2 LF@%2
TYPE LF@%cond LF@%param2
JUMPIFNEQ substr&exit LF@%cond string@int
DEFVAR LF@%param3
MOVE LF@%param3 LF@%3
TYPE LF@%cond LF@%param3
JUMPIFNEQ substr&exit LF@%cond string@int
DEFVAR LF@%retvar$1
MOVE LF@%retvar$1 string@
DEFVAR LF@%cond_length
STRLEN LF@%cond_length LF@%param1
LT LF@%cond LF@%param2 int@1
JUMPIFEQ substr&return LF@%cond bool@true
GT LF@%cond LF@%param2 LF@%cond_length
JUMPIFEQ substr&return LF@%cond bool@true
LT LF@%cond LF@%param3 int@1
JUMPIFEQ substr&return LF@%cond bool@true
GT LF@%cond LF@%param3 LF@%cond_length
JUMPIFEQ substr&return LF@%cond bool@true
LT LF@%cond LF@%param3 LF@%param2
JUMPIFEQ substr&return LF@%cond bool@true
DEFVAR LF@%item
DEFVAR LF@%i
SUB LF@%i LF@%param2 int@1
DEFVAR LF@%j
SUB LF@%j LF@%param3 int@1
LABEL substr&for
GT LF@%cond LF@%i LF@%j
JUMPIFEQ substr&return LF@%cond bool@true
GETCHAR LF@%item LF@%param1 LF@%i
CONCAT LF@%retvar$1 LF@%retvar$1 LF@%item
ADD LF@%i LF@%i int@1
JUMP substr&for
LABEL substr&return
POPFRAME
RETURN
LABEL substr&exit
EXIT int@8

LABEL ord
PUSHFRAME
DEFVAR LF@%retvar$1
DEFVAR LF@%param1
MOVE LF@%param1 LF@%1
TYPE LF@%retvar$1 LF@%param1
JUMPIFNEQ ord&exit LF@%retvar$1 string@string
DEFVAR LF@%param2
MOVE LF@%param2 LF@%2
TYPE LF@%retvar$1 LF@%param2
JUMPIFNEQ ord&exit LF@%retvar$1 string@int
MOVE LF@%retvar$1 nil@nil
DEFVAR LF@%cond_length
LT LF@%cond_length LF@%param2 int@0
JUMPIFEQ ord&return LF@%cond_length bool@true
STRLEN LF@%cond_length LF@%param1
SUB LF@%cond_length LF@%cond_length int@1
GT LF@%cond_length LF@%param2 LF@%cond_length
JUMPIFEQ ord&return LF@%cond_length bool@true
STRI2INT LF@%retvar$1 LF@%param1 LF@%param2
LABEL ord&return
POPFRAME
RETURN
LABEL ord&exit
EXIT int@8

LABEL chr
PUSHFRAME
DEFVAR LF@%cond
DEFVAR LF@%param1
MOVE LF@%param1 LF@%1
TYPE LF@%cond LF@%param1
JUMPIFNEQ chr&exit LF@%cond string@int
DEFVAR LF@%retvar$1
MOVE LF@%retvar$1 nil@nil
LT LF@%cond LF@%param1 int@0
JUMPIFEQ chr&return LF@%cond bool@true
GT LF@%cond LF@%param1 int@255
JUMPIFEQ chr&return LF@%cond bool@true
INT2CHAR LF@%retvar$1 LF@%param1
LABEL chr&return
POPFRAME
RETURN
LABEL char&exit
EXIT int@8

LABEL main
PUSHFRAME
DEFVAR LF@$main_tmp1
DEFVAR LF@$main_tmp2
DEFVAR LF@$main_tmp3
DEFVAR LF@main_a
PUSHS int@5
POPS LF@$main_tmp1
MOVE LF@main_a LF@$main_tmp1
DEFVAR LF@main_b
PUSHS float@0x1.399999999999ap+2
POPS LF@$main_tmp1
MOVE LF@main_b LF@$main_tmp1
DEFVAR LF@main_c
PUSHS float@0x1.4666666666666p+2
POPS LF@$main_tmp1
MOVE LF@main_c LF@$main_tmp1
LABEL main_if1
PUSHS LF@main_a
PUSHS LF@main_c
POPS LF@$main_tmp2
JUMPIFEQ main&error_nil LF@$main_tmp2 nil@nil
POPS LF@$main_tmp1
JUMPIFEQ main&error_nil LF@$main_tmp1 nil@nil
PUSHS LF@$main_tmp1
JUMPIFEQ mainconvert1 LF@$main_tmp1 nil@nil
INT2FLOATS
POPS LF@$main_tmp1
PUSHS LF@$main_tmp1
PUSHS LF@$main_tmp2
LABEL mainconvert1
POPS LF@$main_tmp2
POPS LF@$main_tmp1
PUSHS LF@$main_tmp1
PUSHS LF@$main_tmp2
GTS
PUSHS LF@$main_tmp1
PUSHS LF@$main_tmp2
EQS
ORS
POPS LF@$main_tmp1
JUMPIFEQ main_endif1 LF@$main_tmp1 nil@nil
JUMPIFEQ main_endif1 LF@$main_tmp1 bool@false
CREATEFRAME
CLEARS
PUSHS string@ano,
PUSHS int@1
CALL write
JUMP main_end1
LABEL main_endif1
LABEL main_else1
CREATEFRAME
CLEARS
PUSHS string@ne,
PUSHS int@1
CALL write
LABEL main_end1
LABEL main_if2
PUSHS LF@main_a
PUSHS LF@main_b
POPS LF@$main_tmp2
JUMPIFEQ main&error_nil LF@$main_tmp2 nil@nil
POPS LF@$main_tmp1
JUMPIFEQ main&error_nil LF@$main_tmp1 nil@nil
PUSHS LF@$main_tmp1
JUMPIFEQ mainconvert2 LF@$main_tmp1 nil@nil
INT2FLOATS
POPS LF@$main_tmp1
PUSHS LF@$main_tmp1
PUSHS LF@$main_tmp2
LABEL mainconvert2
GTS
POPS LF@$main_tmp1
JUMPIFEQ main_endif2 LF@$main_tmp1 nil@nil
JUMPIFEQ main_endif2 LF@$main_tmp1 bool@false
CREATEFRAME
CLEARS
PUSHS string@ano,
PUSHS int@1
CALL write
JUMP main_end2
LABEL main_endif2
LABEL main_else2
CREATEFRAME
CLEARS
PUSHS string@ne,
PUSHS int@1
CALL write
LABEL main_end2
LABEL main_if3
PUSHS LF@main_a
PUSHS float@0x1.399999999999ap+2
POPS LF@$main_tmp2
JUMPIFEQ main&error_nil LF@$main_tmp2 nil@nil
POPS LF@$main_tmp1
JUMPIFEQ main&error_nil LF@$main_tmp1 nil@nil
PUSHS LF@$main_tmp1
JUMPIFEQ mainconvert3 LF@$main_tmp1 nil@nil
INT2FLOATS
POPS LF@$main_tmp1
PUSHS LF@$main_tmp1
PUSHS LF@$main_tmp2
LABEL mainconvert3
GTS
POPS LF@$main_tmp1
JUMPIFEQ main_endif3 LF@$main_tmp1 nil@nil
JUMPIFEQ main_endif3 LF@$main_tmp1 bool@false
CREATEFRAME
CLEARS
PUSHS string@ano,
PUSHS int@1
CALL write
JUMP main_end3
LABEL main_endif3
LABEL main_else3
CREATEFRAME
CLEARS
PUSHS string@ne,
PUSHS int@1
CALL write
LABEL main_end3
POPFRAME
RETURN
LABEL main&error_nil
EXIT int@8
LABEL main&error_zero
EXIT int@9
LABEL $$main
CREATEFRAME
PUSHFRAME
DEFVAR LF@$main_tmp1
DEFVAR LF@$main_tmp2
DEFVAR LF@$main_tmp3
CREATEFRAME
CLEARS
CALL main
POPFRAME
